[solarflow]
sf_device_id =
#sf_product_id =

[local]
mqtt_host = 192.168.1.245
#mqtt_port = 
#mqtt_user =
#mqtt_pwd =
#latitude =
#longitude =

[control]
battery_low = 2
battery_high = 98
min_charge_level = 125
max_discharge_level = 150
day_discharge_soc = 50
overage_limit = 15                                                      
max_inverter_limit = 800                                                
inverter_mppts = 4
inverter_sf_inputs_used = 1 
fast_change_offset = 200
limit_inverter = true

# window sizes to calculate moving averages of values to avoid overreacting to short spikes/drops
# use average of last X measurements of Solarflow solarinput 
sf_window = 5
# use average of last X measurements of house smartmeter/consumption
sm_window = 5
# use average of last X measurements of inverter output
inv_window = 5
# use average of last X measurements of inverter limit
limit_window = 5

# MQTT telemetry topics specify where solarflow control can read data for it's operation
# all topics must provide integer or float values (no json message format)
[mqtt_telemetry_topics]
# the topic that provides the current household power consumption, read from a smartmeter or equivalent
# you can also provide multiple topics (which will be added up), e.g for Shelly 3-Phase measurement devices
# by separating them with ","
# topic_house = shellies/shellyem3/emeter/1/power, shellies/shellyem3/emeter/2/power, shellies/shellyem3/emeter/3/power
topic_house = 

# topic for the microinverter input to home (e.g. from OpenDTU, AhouyDTU)
topic_acinput = 

# topics for panels power which are directly connected to the microinverter (optional)
# typically you would also get this from OpenDTU, AhouDTU or your inverter
# you can provide multiple topics by separating them with ","
# topic_direct_panel = solar/116491132532/1/power, solar/116491132532/2/power
#topic_direct_panel = 

# topics for telemetry read from Solarflow Hub
# Note: Solarflow doesn't directly write to these topics when publishing to your local MQTT broker
#       it rather writes to it's predefined topic.
#       Therefor it's recommended to either run the solarflow statuspage or the little topic mapper script to
#       "clean up" the topics and provide them at these locations
# See: https://github.com/reinhard-brandstaedter/solarflow-bt-manager/blob/master/src/solarflow-topic-mapper.py                                        
#topic_solarflow_solarinput = solarflow-hub/telemetry/solarInputPower
#topic_solarflow_electriclevel = solarflow-hub/telemetry/electricLevel
#topic_solarflow_outputpack = solarflow-hub/telemetry/outputPackPower
#topic_solarflow_packinput = solarflow-hub/telemetry/packInputPower
#topic_solarflow_outputhome = solarflow-hub/telemetry/outputHomePower
#topic_solarflow_maxtemp = solarflow-hub/telemetry/batteries/+/maxTemp
#topic_solarflow_battery_soclevel = solarflow-hub/telemetry/batteries/+/socLevel

# topic to steer your microinverter
# for OpenDTU and AhoyDTU please use the command topic that sets the ABSOLUTE limit (in watts) not the RELATIVE limit in percent
topic_limit_non_persistent = solar/116491132532/cmd/limit_nonpersistent_absolute
